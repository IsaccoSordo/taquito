name: Mondaynet Integration Tests

on:
  push:
    branches:
      - '**mondaynet**'
  schedule:
    - cron: '0 0 * * 2'
  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # integration-tests-mondaynet:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-node@v3
  #     with:
  #       node-version: '16.13.2'
  #   - run: npm ci
  #   - run: npm run lerna -- bootstrap
  #   - run: npm run build
  #   -
  #     name: Tailscale
  #     uses: tailscale/github-action@v1
  #     with:
  #       authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
  #       version: 1.22.2
  #   -
  #     id: originate-contracts-mondaynet
  #     working-directory: ./integration-tests
  #     env:
  #       MONDAYNET: true
  #     run: npm run test:originate-known-contracts
  #   -
  #     if: always()
  #     id: integration-tests-mondaynet
  #     working-directory: ./integration-tests
  #     env:
  #       TEZOS_MONDAYNET_CONTRACT_ADDRESS: ${{ steps.originate-contracts-mondaynet.outputs.knownContractAddress }}
  #       TEZOS_MONDAYNET_BIGMAPCONTRACT_ADDRESS: ${{ steps.originate-contracts-mondaynet.outputs.knownBigMapContractAddress }}
  #       TEZOS_MONDAYNET_TZIP1216CONTRACT_ADDRESS: ${{ steps.originate-contracts-mondaynet.outputs.knownTzip12BigMapOffChainContractAddress }}
  #       TEZOS_MONDAYNET_SAPLINGCONTRACT_ADDRESS: ${{ steps.originate-contracts-mondaynet.outputs.knownSaplingContractAddress }}
  #     run: npm run test:mondaynet -- --maxWorkers=2

  integration-tests-toru:
    runs-on: ubuntu-latest
    steps:        
    -
      name: Tailscale
      uses: tailscale/github-action@v1
      with:
        authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
        version: 1.30.0

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_KEY" > ~/.ssh/id.key
        chmod 600 ~/.ssh/id.key
        cat >>~/.ssh/config <<END
        Host mondaynet
          HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/id.key
          StrictHostKeyChecking no
        END
      env:
        SSH_USER: ${{ secrets.MONDAYNET_TORU_SSH_USER }}
        SSH_KEY: ${{ secrets.MONDAYNET_TORU_SSH_KEY }}
        SSH_HOST: ecad-mondaynet-archive

    - id: toru-addresses
      run: echo "::set-output name=tx-rollup-hash::$(ssh mondaynet \"jq '.[] | select(.name==\"toru_node\") | .value' /srv/tezos/mondaynet_client/tx_rollups\")"

    - run: |
        echo "Test env variables ${{ steps.toru-addresses.outputs.tx-rollup-hash }}"
        echo "Test env variables ${{ steps.toru-addresses.outputs.tx-rollup-withdraw-contract }}"
        echo "Test env variables ${{ steps.toru-addresses.outputs.tx-rollup-deposit-contract }}"

    # - run: ssh ${{ secrets.MONDAYNET_TORU_SSH_USER }}@100.65.170.39 jq '.[] | select(.name=="toru_node") | .value' /srv/tezos/mondaynet_client/tx_rollups
    # - run: echo "Test env variables ${TX_ROLLUP_HASH}"
    
    # - uses: actions/checkout@v3
    # - uses: actions/setup-node@v3
    #   with:
    #     node-version: '16.13.2'
    # - run: npm ci
    # - run: npm run lerna -- bootstrap
    # - run: npm run build
